require "twitter"
require 'open-uri'
require 'nokogiri'
require "./time.rb"

def weather_change_today() #‰ªäÊó•„ÅÆÂ§©Ê∞ó„Åã„Çâ„Éó„É≠„Éï„Ç£„Éº„É´„ÇíÂ§â„Åà„Çã„Çà
  stream_client = Twitter::Streaming::Client.new do |config|
    config.consumer_key        = ENV['MY_CONSUMER_KEY']
    config.consumer_secret     = ENV['MY_CONSUMER_SECRET']
    config.access_token        = ENV['MY_ACCESS_TOKEN']
    config.access_token_secret = ENV['MY_ACCESS_TOKEN_SECRET']
  end

  client = Twitter::REST::Client.new do |config|
    config.consumer_key        = ENV['MY_CONSUMER_KEY']
    config.consumer_secret     = ENV['MY_CONSUMER_SECRET']
    config.access_token        = ENV['MY_ACCESS_TOKEN']
    config.access_token_secret = ENV['MY_ACCESS_TOKEN_SECRET']
  end

  url = 'http://www.jma.go.jp/jp/yoho/319.html'

  charset = nil
  html = open(url) do |f|
    charset = f.charset
    f.read
  end
  doc = Nokogiri::HTML.parse(html, nil, charset)

  tds = doc.xpath("//th[@class='weather']") # Â§©Ê∞ó
  wea = tds[0].to_s
  weather = wea.match(/title="(.+)" alt/)
  weather_title = weather[1]
  if /Èõ®/ === weather_title
    change_icon("ametech")
  else
    change_icon("nagatech")
  end
  weather_title.gsub!(/Êô¥„Çå/,"‚òÄ")
  weather_title.gsub!(/Êõá„Çä/,"‚òÅ")
  weather_title.gsub!(/Èõ®/,"‚òî")
  weather_title.gsub!(/Èõ™/,"‚õÑ")
  weather_title.gsub!(/Ê≠¢„ÇÄ/,"üåÇ")
  weather_title.gsub!(/Âæå/,"/")
  weather_title.gsub!(/ÊôÇ„ÄÖ/,"|")
  weather_title.gsub!(/\/\|/,"/ÊôÇ„ÄÖ")

  username = "„Å™„Åå„Å¶„Å° (" + weather_title + ")"
  client.update_profile(:name => username)
end

def weather_change_tomorrow() #ÊòéÊó•„ÅÆÂ§©Ê∞ó„Åã„Çâ„Éó„É≠„Éï„Ç£„Éº„É´„ÇíÂ§â„Åà„Çã„Çà
  stream_client = Twitter::Streaming::Client.new do |config|
    config.consumer_key        = ENV['MY_CONSUMER_KEY']
    config.consumer_secret     = ENV['MY_CONSUMER_SECRET']
    config.access_token        = ENV['MY_ACCESS_TOKEN']
    config.access_token_secret = ENV['MY_ACCESS_TOKEN_SECRET']
  end

  client = Twitter::REST::Client.new do |config|
    config.consumer_key        = ENV['MY_CONSUMER_KEY']
    config.consumer_secret     = ENV['MY_CONSUMER_SECRET']
    config.access_token        = ENV['MY_ACCESS_TOKEN']
    config.access_token_secret = ENV['MY_ACCESS_TOKEN_SECRET']
  end

  url = 'http://www.jma.go.jp/jp/yoho/319.html'

  charset = nil
  html = open(url) do |f|
    charset = f.charset
    f.read
  end
  doc = Nokogiri::HTML.parse(html, nil, charset)

  tds = doc.xpath("//tr[3]/th[@class='weather']") # Â§©Ê∞ó
  wea = tds[0].to_s
  weather = wea.match(/title="(.+)" alt/)
  weather_title = weather[1]
  if /Èõ®/ === weather_title
    change_icon("ametech")
  else
    change_icon("nagatech")
  end
  weather_title.gsub!(/Êô¥„Çå/,"‚òÄ")
  weather_title.gsub!(/Êõá„Çä/,"‚òÅ")
  weather_title.gsub!(/Èõ®/,"‚òî")
  weather_title.gsub!(/Èõ™/,"‚õÑ")
  weather_title.gsub!(/Ê≠¢„ÇÄ/,"üåÇ")
  weather_title.gsub!(/Âæå/,"/")
  weather_title.gsub!(/ÊôÇ„ÄÖ/,"|")
  weather_title.gsub!(/\/\|/,"/ÊôÇ„ÄÖ")

  username = "„Å™„Åå„Å¶„Å° (ÊòéÊó•:" + weather_title + ")"
  client.update_profile(:name => username)
end

def change_icon(name) #„Ç¢„Ç§„Ç≥„É≥„ÇíÂ§â„Åà„Çã„Çà
  stream_client = Twitter::Streaming::Client.new do |config|
    config.consumer_key        = ENV['MY_CONSUMER_KEY']
    config.consumer_secret     = ENV['MY_CONSUMER_SECRET']
    config.access_token        = ENV['MY_ACCESS_TOKEN']
    config.access_token_secret = ENV['MY_ACCESS_TOKEN_SECRET']
  end

  client = Twitter::REST::Client.new do |config|
    config.consumer_key        = ENV['MY_CONSUMER_KEY']
    config.consumer_secret     = ENV['MY_CONSUMER_SECRET']
    config.access_token        = ENV['MY_ACCESS_TOKEN']
    config.access_token_secret = ENV['MY_ACCESS_TOKEN_SECRET']
  end

  icon_name = name + ".png"
  icon = File.open(File.expand_path("../icon/" + icon_name, __FILE__), "r") 
  
  client.update_profile_image(icon)

end